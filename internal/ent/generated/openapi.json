{
  "openapi": "3.1.0",
  "info": {
    "title": "OpenLane OpenAPI 3.1.0 Specifications",
    "description": "Programmatic interfaces for interacting with OpenLane Services",
    "termsOfService": "https://openlane.net/tos",
    "contact": {
      "name": "OpenLane Support",
      "url": "https://openlane.net/support",
      "email": "support@openlane.net"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0"
    },
    "version": "1.0.1"
  },
  "servers": [
    {
      "url": "https://api.openlane.net/v1",
      "description": "OpenLane Production API Endpoint"
    },
    {
      "url": "http://localhost:17608/v1",
      "description": "http localhost endpoint for testing purposes"
    }
  ],
  "paths": {
    "/databases": {
      "get": {
        "tags": [
          "Database"
        ],
        "summary": "List Databases",
        "description": "List Databases.",
        "operationId": "listDatabase",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "maximum": 255,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Database list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Database"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "Database"
        ],
        "summary": "Create a new Database",
        "description": "Creates a new Database and persists it to storage.",
        "operationId": "createDatabase",
        "requestBody": {
          "description": "Database to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "created_by": {
                    "type": "string"
                  },
                  "updated_by": {
                    "type": "string"
                  },
                  "mapping_id": {
                    "type": "string"
                  },
                  "organization_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "geo": {
                    "type": "string"
                  },
                  "dsn": {
                    "type": "string"
                  },
                  "group_id": {
                    "type": "string"
                  },
                  "token": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "ACTIVE",
                      "CREATING",
                      "DELETING",
                      "DELETED"
                    ],
                    "default": "CREATING"
                  },
                  "provider": {
                    "type": "string",
                    "enum": [
                      "LOCAL",
                      "TURSO"
                    ],
                    "default": "LOCAL"
                  },
                  "group": {
                    "type": "string"
                  }
                },
                "required": [
                  "mapping_id",
                  "organization_id",
                  "name",
                  "dsn",
                  "group_id",
                  "status",
                  "provider",
                  "group"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Database created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Database"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/databases/{id}": {
      "get": {
        "tags": [
          "Database"
        ],
        "summary": "Find a Database by ID",
        "description": "Finds the Database with the requested ID and returns it.",
        "operationId": "readDatabase",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Database",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Database with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Database"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "Database"
        ],
        "summary": "Deletes a Database by ID",
        "description": "Deletes the Database with the requested ID.",
        "operationId": "deleteDatabase",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Database",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Database with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "Database"
        ],
        "summary": "Updates a Database",
        "description": "Updates a Database and persists changes to storage.",
        "operationId": "updateDatabase",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Database",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Database properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_by": {
                    "type": "string"
                  },
                  "organization_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "geo": {
                    "type": "string"
                  },
                  "dsn": {
                    "type": "string"
                  },
                  "group_id": {
                    "type": "string"
                  },
                  "token": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "ACTIVE",
                      "CREATING",
                      "DELETING",
                      "DELETED"
                    ],
                    "default": "CREATING"
                  },
                  "provider": {
                    "type": "string",
                    "enum": [
                      "LOCAL",
                      "TURSO"
                    ],
                    "default": "LOCAL"
                  },
                  "group": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Database updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Database"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/databases/{id}/group": {
      "get": {
        "tags": [
          "Database"
        ],
        "summary": "Find the attached Group",
        "description": "Find the attached Group of the Database with the given ID",
        "operationId": "readDatabaseGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Database",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Group attached to Database with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/groups": {
      "get": {
        "tags": [
          "Group"
        ],
        "summary": "List Groups",
        "description": "List Groups.",
        "operationId": "listGroup",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "maximum": 255,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Group list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Group"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "Group"
        ],
        "summary": "Create a new Group",
        "description": "Creates a new Group and persists it to storage.",
        "operationId": "createGroup",
        "requestBody": {
          "description": "Group to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "created_by": {
                    "type": "string"
                  },
                  "updated_by": {
                    "type": "string"
                  },
                  "mapping_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "primary_location": {
                    "type": "string"
                  },
                  "locations": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "token": {
                    "type": "string"
                  },
                  "region": {
                    "type": "string",
                    "enum": [
                      "AMER",
                      "EMEA",
                      "APAC"
                    ],
                    "default": "AMER"
                  },
                  "databases": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "mapping_id",
                  "name",
                  "primary_location",
                  "region"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Group created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/groups/{id}": {
      "get": {
        "tags": [
          "Group"
        ],
        "summary": "Find a Group by ID",
        "description": "Finds the Group with the requested ID and returns it.",
        "operationId": "readGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Group",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Group with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "Group"
        ],
        "summary": "Deletes a Group by ID",
        "description": "Deletes the Group with the requested ID.",
        "operationId": "deleteGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Group",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Group with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "Group"
        ],
        "summary": "Updates a Group",
        "description": "Updates a Group and persists changes to storage.",
        "operationId": "updateGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Group",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Group properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_by": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "primary_location": {
                    "type": "string"
                  },
                  "locations": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "token": {
                    "type": "string"
                  },
                  "region": {
                    "type": "string",
                    "enum": [
                      "AMER",
                      "EMEA",
                      "APAC"
                    ],
                    "default": "AMER"
                  },
                  "databases": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Group updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/groups/{id}/databases": {
      "get": {
        "tags": [
          "Group"
        ],
        "summary": "List attached Databases",
        "description": "List attached Databases.",
        "operationId": "listGroupDatabases",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Group",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Groups list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Database"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Database": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_by": {
            "type": "string"
          },
          "mapping_id": {
            "type": "string"
          },
          "organization_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "geo": {
            "type": "string"
          },
          "dsn": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "CREATING",
              "DELETING",
              "DELETED"
            ],
            "default": "CREATING"
          },
          "provider": {
            "type": "string",
            "enum": [
              "LOCAL",
              "TURSO"
            ],
            "default": "LOCAL"
          },
          "group": {
            "$ref": "#/components/schemas/Group"
          }
        },
        "required": [
          "id",
          "mapping_id",
          "organization_id",
          "name",
          "dsn",
          "group_id",
          "status",
          "provider",
          "group"
        ]
      },
      "Group": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          },
          "mapping_id": {
            "type": "string"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_by": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "primary_location": {
            "type": "string"
          },
          "locations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "token": {
            "type": "string"
          },
          "region": {
            "type": "string",
            "enum": [
              "AMER",
              "EMEA",
              "APAC"
            ],
            "default": "AMER"
          },
          "databases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Database"
            }
          }
        },
        "required": [
          "id",
          "mapping_id",
          "name",
          "primary_location",
          "region"
        ]
      }
    },
    "responses": {
      "400": {
        "description": "invalid input, data invalid",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "errors": {}
              },
              "required": [
                "code",
                "status"
              ]
            }
          }
        }
      },
      "403": {
        "description": "insufficient permissions",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "errors": {}
              },
              "required": [
                "code",
                "status"
              ]
            }
          }
        }
      },
      "404": {
        "description": "resource not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "errors": {}
              },
              "required": [
                "code",
                "status"
              ]
            }
          }
        }
      },
      "409": {
        "description": "conflicting resources",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "errors": {}
              },
              "required": [
                "code",
                "status"
              ]
            }
          }
        }
      },
      "500": {
        "description": "unexpected error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "errors": {}
              },
              "required": [
                "code",
                "status"
              ]
            }
          }
        }
      }
    }
  }
}