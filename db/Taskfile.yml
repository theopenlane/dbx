version: '3'

tasks:
  create-and-lint:
    desc: runs the atlas create and lint commands
    aliases: [all]
    cmds:
      - task: create
      - task: lint

  create:
    desc: creates an atlas migration if one is needed based on the ent schema definitions
    cmds:
      - |
        echo "If there is no schema to generate, this will not create a file (hint: name it your branch name if you're not sure) - enter the name of the migration:"
        read migration;
        go run create_migrations.go ${migration};

  lint:
    desc: lints the pushed migration files
    ignore_error: true
    cmds:
      - atlas migrate lint --dev-url "sqlite://file?mode=memory&_fk=1" --dir "file://migrations" -w

  migrate:
    desc: pushes the generated migration files to atlas cloud
    cmds:
      - atlas migrate push dbx --dev-url "sqlite://dev?mode=memory&_fk=1" --dir "file://migrations"

  resethash:
    desc: re-sets the checksum created by the atlas package so that a complete migration can be re-created if deleted
    cmds:
      - atlas migrate hash --dir="file://migrations"
      - atlas migrate hash --dir="file://migrations-goose-sqlite"
      - atlas migrate hash --dir="file://migrations-goose-postgres"

  console:
    desc: launches an interactive terminal to the local dbx db with some tasty options
    cmds:
      - sqlite3 -column -header -box ../dbx.db

  newschema:
    desc: generate a new ent schema for dbx
    silent: true
    cmds:
      - go run -mod=mod entgo.io/ent/cmd/ent new --template ../internal/ent/base/entinit.tmpl --target ../internal/ent/schema {{.CLI_ARGS}}
